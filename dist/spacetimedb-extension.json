{
  "author": "sixdev",
  "category": "Network",
  "description": "Native GDevelop SDK for SpaceTimeDB â€“ real-time database support over WebSocket with insert, update, delete, subscription and event system.",
  "name": "SpaceTimeDB",
  "version": "1.2.0",
  "tags": ["multiplayer", "realtime", "database", "websocket"],
  "eventsFunctions": [
    {
      "name": "Connect",
      "functionType": "Action",
      "description": "Connect to a SpaceTimeDB server via WebSocket URL.",
      "sentence": "Connect to SpaceTimeDB at _PARAM0_",
      "parameters": [
        { "name": "URL", "type": "string", "description": "ws://localhost:3000" }
      ],
      "events": []
    },
    {
      "name": "Disconnect",
      "functionType": "Action",
      "description": "Disconnect from the SpaceTimeDB server.",
      "sentence": "Disconnect from SpaceTimeDB",
      "parameters": [],
      "events": []
    },
    {
      "name": "Reconnect",
      "functionType": "Action",
      "description": "Reconnect to the last known SpaceTimeDB server.",
      "sentence": "Reconnect to SpaceTimeDB",
      "parameters": [],
      "events": []
    },
    {
      "name": "Subscribe",
      "functionType": "Action",
      "description": "Subscribe to a SpaceTimeDB table to receive live updates.",
      "sentence": "Subscribe to table _PARAM0_",
      "parameters": [
        { "name": "Table", "type": "string", "description": "Table name" }
      ],
      "events": []
    },
    {
      "name": "Insert",
      "functionType": "Action",
      "description": "Insert JSON data into a SpaceTimeDB table.",
      "sentence": "Insert into table _PARAM0_ data _PARAM1_",
      "parameters": [
        { "name": "Table", "type": "string" },
        { "name": "Data", "type": "string" }
      ],
      "events": []
    },
    {
      "name": "Update",
      "functionType": "Action",
      "description": "Update a row by ID in a SpaceTimeDB table.",
      "sentence": "Update table _PARAM0_ entry with id _PARAM1_ data _PARAM2_",
      "parameters": [
        { "name": "Table", "type": "string" },
        { "name": "ID", "type": "string" },
        { "name": "Data", "type": "string" }
      ],
      "events": []
    },
    {
      "name": "Delete",
      "functionType": "Action",
      "description": "Delete a row by ID in a SpaceTimeDB table.",
      "sentence": "Delete from table _PARAM0_ entry with id _PARAM1_",
      "parameters": [
        { "name": "Table", "type": "string" },
        { "name": "ID", "type": "string" }
      ],
      "events": []
    },
    {
      "name": "ClearCache",
      "functionType": "Action",
      "description": "Clear all cached data from the client (last message, table states).",
      "sentence": "Clear cached SpaceTimeDB data",
      "parameters": [],
      "events": []
    }
  ],
  "eventsBasedObjects": [],
  "eventsBasedBehaviors": [],
  "conditions": [
    {
      "name": "OnOpen",
      "description": "Triggered when WebSocket connects successfully.",
      "functionType": "Condition",
      "sentence": "When SpaceTimeDB connection opens",
      "parameters": [],
      "events": []
    },
    {
      "name": "OnClose",
      "description": "Triggered when WebSocket closes.",
      "functionType": "Condition",
      "sentence": "When SpaceTimeDB connection closes",
      "parameters": [],
      "events": []
    },
    {
      "name": "OnError",
      "description": "Triggered when an error occurs.",
      "functionType": "Condition",
      "sentence": "When SpaceTimeDB error occurs",
      "parameters": [],
      "events": []
    },
    {
      "name": "OnChange",
      "description": "Triggered when table data changes (insert/update/delete).",
      "functionType": "Condition",
      "sentence": "When SpaceTimeDB data changes",
      "parameters": [],
      "events": []
    }
  ],
  "expressions": [
    {
      "name": "LastData",
      "type": "string",
      "description": "Returns the last full JSON message received.",
      "parameters": []
    },
    {
      "name": "TableData",
      "type": "string",
      "description": "Returns cached table data as JSON string.",
      "parameters": [
        { "name": "Table", "type": "string" }
      ]
    },
    {
      "name": "LastError",
      "type": "string",
      "description": "Returns the last WebSocket or JSON error.",
      "parameters": []
    },
    {
      "name": "ConnectionStatus",
      "type": "string",
      "description": "Returns connection state: 'connected', 'disconnected', etc.",
      "parameters": []
    },
    {
      "name": "TimeSinceLastMessage",
      "type": "number",
      "description": "Milliseconds since the last message was received.",
      "parameters": []
    }
  ]
}
